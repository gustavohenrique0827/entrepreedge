
import React, { createContext, useContext, useState, useEffect } from 'react';

// Tipos de segmentos de neg√≥cio dispon√≠veis
export type BusinessSegmentType = 
  'manufacturing' | 
  'education' | 
  'health' | 
  'legal' | 
  'technology' | 
  'services' | 
  'fashion' | 
  'ecommerce' | 
  'agribusiness' | 
  'retail';

// Definir o tipo para uma atividade de segmento
export interface SegmentActivity {
  id: string;
  title: string;
  description?: string;
  path: string;
  icon?: React.ReactNode;
}

// Definir o tipo para o contexto
interface SegmentContextType {
  segmentName: string;
  segmentType: BusinessSegmentType | null;
  segmentIcon: string;
  segmentActivities: SegmentActivity[];
  changeSegment: (type: BusinessSegmentType, name: string) => void;
}

// Criar o contexto
const SegmentContext = createContext<SegmentContextType | undefined>(undefined);

// Definir o provedor do contexto
export const SegmentProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  // Estado para armazenar o tipo de segmento atual
  const [segmentType, setSegmentType] = useState<BusinessSegmentType | null>(null);
  // Estado para armazenar o nome do segmento atual
  const [segmentName, setSegmentName] = useState<string>('');
  // Estado para armazenar o √≠cone do segmento atual
  const [segmentIcon, setSegmentIcon] = useState<string>('üè¢');
  // Estado para armazenar as atividades do segmento atual
  const [segmentActivities, setSegmentActivities] = useState<SegmentActivity[]>([]);

  // Fun√ß√£o para definir as atividades com base no tipo de segmento
  const getSegmentActivities = (type: BusinessSegmentType): SegmentActivity[] => {
    switch (type) {
      case 'manufacturing':
        setSegmentIcon('üè≠');
        return [
          { id: '1', title: 'Estoque', description: 'Gest√£o de invent√°rio', path: '/segment/inventory' },
          { id: '2', title: 'Ordens de Produ√ß√£o', description: 'Controle de produ√ß√£o', path: '/segment/production-orders' },
          { id: '3', title: 'Suprimentos', description: 'Gest√£o de materiais', path: '/segment/supplies' },
          { id: '4', title: 'Equipamentos', description: 'Manuten√ß√£o e controle', path: '/segment/equipment' },
          { id: '5', title: 'Log√≠stica', description: 'Transporte e distribui√ß√£o', path: '/segment/logistics' },
          { id: '6', title: 'Relat√≥rios', description: 'An√°lise de produ√ß√£o', path: '/segment/production-reports' }
        ];
      case 'education':
        setSegmentIcon('üéì');
        return [
          { id: '1', title: 'Alunos', description: 'Cadastro e gerenciamento', path: '/segment/students' },
          { id: '2', title: 'Cursos e Turmas', description: 'Estrutura pedag√≥gica', path: '/segment/courses' },
          { id: '3', title: 'Professores', description: 'Corpo docente', path: '/segment/teachers' },
          { id: '4', title: 'Notas', description: 'Avalia√ß√£o e desempenho', path: '/segment/grades' },
          { id: '5', title: 'Certificados', description: 'Emiss√£o de documentos', path: '/segment/certificates' },
          { id: '6', title: 'Calend√°rio', description: 'Agenda escolar', path: '/segment/school-calendar' }
        ];
      case 'health':
        setSegmentIcon('üè•');
        return [
          { id: '1', title: 'Pacientes', description: 'Cadastro e prontu√°rios', path: '/segment/patients' },
          { id: '2', title: 'Consultas', description: 'Agendamento e atendimento', path: '/segment/appointments' },
          { id: '3', title: 'Hospital', description: 'Gest√£o hospitalar', path: '/segment/hospital' },
          { id: '4', title: 'Medicamentos', description: 'Controle de farm√°cia', path: '/segment/medications' },
          { id: '5', title: 'Faturamento', description: 'Conv√™nios e recebimentos', path: '/segment/health-billing' },
          { id: '6', title: 'Prontu√°rios', description: 'Hist√≥rico m√©dico', path: '/segment/medical-records' }
        ];
      case 'legal':
        setSegmentIcon('‚öñÔ∏è');
        return [
          { id: '1', title: 'Processos', description: 'Gest√£o de casos', path: '/segment/cases' },
          { id: '2', title: 'Documentos', description: 'Gera√ß√£o de documentos jur√≠dicos', path: '/segment/legal-documents' },
          { id: '3', title: 'Audi√™ncias', description: 'Agenda de audi√™ncias', path: '/segment/hearings' },
          { id: '4', title: 'Clientes', description: 'Cadastro de clientes', path: '/segment/legal-clients' },
          { id: '5', title: 'Prazos', description: 'Calend√°rio jur√≠dico', path: '/segment/legal-calendar' },
          { id: '6', title: 'Relat√≥rios', description: 'Produtividade e resultados', path: '/segment/lawyer-reports' }
        ];
      case 'technology':
        setSegmentIcon('üíª');
        return [
          { id: '1', title: 'Projetos', description: 'Gest√£o de projetos', path: '/segment/projects' },
          { id: '2', title: 'Chamados', description: 'Suporte t√©cnico', path: '/segment/support-tickets' },
          { id: '3', title: 'Testes', description: 'Qualidade de software', path: '/segment/testing' },
          { id: '4', title: 'Base de Conhecimento', description: 'Documenta√ß√£o', path: '/segment/knowledge' },
          { id: '5', title: 'Configura√ß√µes', description: 'Infraestrutura', path: '/segment/tech-config' },
          { id: '6', title: 'M√©tricas', description: 'Desempenho e an√°lises', path: '/segment/dev-metrics' }
        ];
      case 'services':
        setSegmentIcon('üîß');
        return [
          { id: '1', title: 'Ordens de Servi√ßo', description: 'Gest√£o de tarefas', path: '/segment/service-orders' },
          { id: '2', title: 'Agendamentos', description: 'Calend√°rio de servi√ßos', path: '/segment/service-appointments' },
          { id: '3', title: 'SLA', description: 'Acordos de n√≠vel de servi√ßo', path: '/segment/sla' },
          { id: '4', title: 'Suporte', description: 'Atendimento ao cliente', path: '/segment/customer-support' },
          { id: '5', title: 'Propostas', description: 'Or√ßamentos e contratos', path: '/segment/proposals' },
          { id: '6', title: 'Equipe de Campo', description: 'Gest√£o de t√©cnicos', path: '/segment/field-team' }
        ];
      case 'fashion':
        setSegmentIcon('üëï');
        return [
          { id: '1', title: 'Cole√ß√µes', description: 'Desenvolvimento de produtos', path: '/segment/collections' },
          { id: '2', title: 'Estoque', description: 'Controle de invent√°rio', path: '/segment/fashion-inventory' },
          { id: '3', title: 'Vendas', description: 'Gest√£o de vendas', path: '/segment/fashion-sales' },
          { id: '4', title: 'Cat√°logo', description: 'Imagens de produtos', path: '/segment/product-images' },
          { id: '5', title: 'Devolu√ß√µes', description: 'Gest√£o de trocas', path: '/segment/returns' },
          { id: '6', title: 'Relat√≥rios', description: 'Desempenho e tend√™ncias', path: '/segment/fashion-reports' }
        ];
      case 'ecommerce':
        setSegmentIcon('üõí');
        return [
          { id: '1', title: 'Produtos', description: 'Gest√£o de cat√°logo', path: '/segment/products' },
          { id: '2', title: 'Checkout', description: 'Pagamento e finaliza√ß√£o', path: '/segment/checkout' },
          { id: '3', title: 'Vendas', description: 'Gest√£o de pedidos', path: '/segment/online-sales' },
          { id: '4', title: 'Pagamentos', description: 'Formas de pagamento', path: '/segment/payments' },
          { id: '5', title: 'Log√≠stica', description: 'Entrega e rastreamento', path: '/segment/ecommerce-logistics' },
          { id: '6', title: 'Marketing', description: 'Campanhas e promo√ß√µes', path: '/segment/marketing' }
        ];
      case 'agribusiness':
        setSegmentIcon('üåæ');
        return [
          { id: '1', title: 'Culturas', description: 'Gest√£o de plantio', path: '/segment/crops' },
          { id: '2', title: 'Insumos', description: 'Controle de estoque', path: '/segment/farm-supplies' },
          { id: '3', title: 'Produtividade', description: 'M√©tricas de produ√ß√£o', path: '/segment/productivity' },
          { id: '4', title: 'Calend√°rio', description: 'Planejamento agr√≠cola', path: '/segment/farm-calendar' },
          { id: '5', title: 'Sensores', description: 'IoT e monitoramento', path: '/segment/farm-iot' },
          { id: '6', title: 'Vendas', description: 'Comercializa√ß√£o', path: '/segment/farm-sales' }
        ];
      case 'retail':
        setSegmentIcon('üè™');
        return [
          { id: '1', title: 'Clientes e Fornecedores', description: 'Cadastro e gest√£o', path: '/segment/clients-suppliers' },
          { id: '2', title: 'Notas Fiscais', description: 'Documentos fiscais', path: '/segment/invoices' },
          { id: '3', title: 'Financeiro', description: 'Contas e pagamentos', path: '/segment/financial' },
          { id: '4', title: 'PDV', description: 'Ponto de venda', path: '/segment/pos' },
          { id: '5', title: 'Estoque', description: 'Controle de produtos', path: '/segment/retail-inventory' },
          { id: '6', title: 'Relat√≥rios', description: 'An√°lises de vendas', path: '/segment/retail-reports' }
        ];
      default:
        return [];
    }
  };

  // Carregar o segmento salvo ao iniciar
  useEffect(() => {
    const savedSegmentType = localStorage.getItem('segmentType') as BusinessSegmentType;
    const savedSegmentName = localStorage.getItem('segmentName') || '';
    
    if (savedSegmentType) {
      setSegmentType(savedSegmentType);
      setSegmentName(savedSegmentName);
      setSegmentActivities(getSegmentActivities(savedSegmentType));
    }
  }, []);

  // Fun√ß√£o para mudar o segmento atual
  const changeSegment = (type: BusinessSegmentType, name: string) => {
    setSegmentType(type);
    setSegmentName(name);
    
    // Atualizar atividades com base no novo tipo
    const newActivities = getSegmentActivities(type);
    setSegmentActivities(newActivities);
    
    // Salvar no localStorage
    localStorage.setItem('segmentType', type);
    localStorage.setItem('segmentName', name);
  };

  // Valor do contexto
  const value: SegmentContextType = {
    segmentName,
    segmentType,
    segmentIcon,
    segmentActivities,
    changeSegment
  };

  return (
    <SegmentContext.Provider value={value}>
      {children}
    </SegmentContext.Provider>
  );
};

// Hook para facilitar o uso do contexto
export const useSegment = () => {
  const context = useContext(SegmentContext);
  if (context === undefined) {
    throw new Error('useSegment deve ser usado dentro de um SegmentProvider');
  }
  return context;
};
